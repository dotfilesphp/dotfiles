" .vimrc as part of dotfiles

set nocompatible

" required by vundle to work properly
filetype off

" vundle configuration
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" vim's plugins used in this configuration
Bundle 'gmarik/vundle'
Bundle 'tpope/vim-rails'
Bundle 'scrooloose/nerdtree'
Bundle "MarcWeber/vim-addon-mw-utils"
Bundle "tomtom/tlib_vim"
Bundle 'tpope/vim-surround'
Bundle 'kien/ctrlp.vim'
Bundle 'tpope/vim-markdown'
Bundle 'evidens/vim-twig'
Bundle 'elzr/vim-json'
Bundle 'mattn/emmet-vim'
Bundle 'scrooloose/syntastic'
Bundle 'Rykka/riv.vim'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-repeat'
Bundle 'tobyS/vmustache'
Bundle 'tobyS/pdv'
Bundle 'stephpy/vim-php-cs-fixer'
Bundle 'SirVer/ultisnips'
Bundle 'reedes/vim-thematic'
Bundle 'altercation/vim-colors-solarized'
Bundle 'endel/vim-github-colorscheme'
Bundle 'ntpeters/vim-better-whitespace'

" required by vundle to work properly
filetype plugin indent on

" set syntax highlighting on
syntax on

" set colors settings
set t_Co=256
let g:solarized_termcolors=256

" thematic configuration
let g:thematic#defaults = {
    \ 'typeface': 'Meslo LG L DZ for Powerline',
    \ 'colorscheme': 'Tomorrow-Night-Bright',
    \ 'airline-theme': 'jellybeans',
    \ 'background': 'dark',
    \ 'font-size': 12,
    \ 'laststatus': 2,
    \ 'ruler': 1,
    \ }

let g:thematic#themes = {
    \ 'Tomorrow-Night-Bright' : {},
    \ 'jellybeans' : {},
    \ 'solar_dark' : {
    \     'colorscheme': 'solarized',
    \     'diff-color-fix': 1,
    \     'sign-column-color-fix': 1,
    \ },
    \ 'solar_lite' : {
    \     'colorscheme': 'solarized',
    \     'background': 'light',
    \     'sign-column-color-fix': 1,
    \ },
    \ 'github' : { 'background': 'light' },
    \ 'pencil' : {
    \     'colorscheme': 'pencil',
    \     'background': 'light',
    \     'font-size': 20,
    \     'linespace': 8,
    \     'typeface': 'Cousine',
    \ },
    \ 'iawriter' : {
    \     'colorscheme': 'pencil',
    \     'background': 'light',
    \     'columns': 75,
    \     'font-size': 20,
    \     'fullscreen': 1,
    \     'laststatus': 0,
    \     'linespace': 8,
    \     'typeface': 'Cousine',
    \ },
    \ }

try
    colorscheme github
catch
    colorscheme default
endtry


set cursorline cursorcolumn
hi CursorLine term=bold cterm=bold guibg=Grey40
set incsearch
set hlsearch
set number
set showbreak=↳
set mouse=a
set guioptions-=m
set guioptions-=T
set guioptions-=r

" Shortcut to rapidly toggle `set list`
nmap ,l :set list!
" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬

" always show status bar
set laststatus=2

" sets status line, example [utf-8] 118,27  51%
if has("statusline")
    set statusline=%<%f\ %h%m%r%=%{\"[\".(&fenc==\"\"?&enc:&fenc).((exists(\"+bomb\")\ &&\ &bomb)?\",B\":\"\").\"]\ \"}%k\ %-14.(%l,%c%V%)\ %P
endif

set encoding=utf-8
setglobal fileencoding=utf-8
set nobomb
set termencoding=utf-8
set fileencodings=utf-8

set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4

set fdm=syntax
set foldlevelstart=20
set nobackup
set noswapfile

set visualbell    " don't beep
set noerrorbells  " don't beep

set pastetoggle=<F2>

" disable folding in markdown files
let g:vim_markdown_folding_disabled=1

"""""""""""""""""""""""""""""""""""""""""""
" specific settings for different filetypes
"""""""""""""""""""""""""""""""""""""""""""

" set highlighting for *.md, *.markdown files
au BufRead,BufNewFile *.md,*.markdown,*.mdown set filetype=markdown

" set highlightning for *.html.twig files
au BufRead,BufNewFile *.html.twig set filetype=html.twig

" set highlightning for *.json files
au BufRead,BufNewFile *.json set filetype=json

"autocmd BufRead,BufNewFile   *.xlf,*.xliff,*.php,*.html,*.twig set shiftwidth=4 tabstop=4
"autocmd BufRead,BufNewFile *.rb setlocal shiftwidth=2 tabstop=2
"autocmd BufRead,BufNewFile *.java set noic cin noexpandtab
"au FileType *xlf,*.xliff,*.php,*.html,*.twig setlocal shiftwidth=4 tabstop=4

" set highlightning for *.json files
au BufRead,BufNewFile *.conf set syntax=dosini


""""""""""""""""""""""""""""""""""""""""
" custom commands
""""""""""""""""""""""""""""""""""""""""

command Q q
command Wq wq
command WQ wq


""""""""""""""""""""""""""""""""""""""""
" NERDTree
""""""""""""""""""""""""""""""""""""""""

autocmd VimEnter * NERDTree
let NERDTreeShowHidden=1
autocmd VimEnter * wincmd p

autocmd WinEnter * call s:CloseIfOnlyNerdTreeLeft()

" Close all open buffers on entering a window if the only
" buffer that's left is the NERDTree buffer
function! s:CloseIfOnlyNerdTreeLeft()
    if exists("t:NERDTreeBufName")
        if bufwinnr(t:NERDTreeBufName) != -1
            if winnr("$") == 1
                q
            endif
        endif
    endif
endfunction

"""""""""""""""""""""""""""""""""""""""
" ctrlp.vim
"""""""""""""""""""""""""""""""""""""""
set runtimepath^=~/.vim/bundle/ctrlp.vim


""""""""""""""""""""""""""""""""""""""
" pdv
""""""""""""""""""""""""""""""""""""""

let g:pdv_template_dir = $HOME ."/.vim/bundle/pdv/templates_snip"
" PHP documenter script bound to Control-P
autocmd FileType php inoremap <C-p> <ESC>:call pdv#DocumentWithSnip()<CR>i
autocmd FileType php nnoremap <C-p> :call pdv#DocumentWithSnip()<CR>
autocmd FileType php vnoremap <C-p> :call pdv#DocumentWithSnip()<CR>


" sets the title of the window to current opened file
let &titlestring = hostname() . "[vim(" . expand("%:t") . ")]"
if &term == "screen"
    set t_ts=^[k
    set t_fs=^[\
endif
if &term == "screen" || &term == "xterm"
    set title
endif

" wrap lines when in diff mode
au VimEnter * if &diff | execute 'windo set wrap' | endif

set clipboard=vim-clipboard
