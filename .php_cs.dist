<?php

declare(strict_types=1);

/*
 * This file is part of the dotfiles project.
 *
 *     (c) Anthonius Munthi <me@itstoni.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

$header = <<<'EOF'
This file is part of the dotfiles project.

    (c) Anthonius Munthi <me@itstoni.com>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.
EOF;

if (!file_exists(__DIR__.'/src')) {
    exit(0);
}

return PhpCsFixer\Config::create()
    ->setRules(array(
        '@Symfony' => true,
        '@Symfony:risky' => true,
        '@PHPUnit60Migration:risky' => true,
        'php_unit_no_expectation_annotation' => false, // part of `PHPUnitXYMigration:risky` ruleset, to be enabled when PHPUnit 4.x support will be dropped, as we don't want to rewrite exceptions handling twice
        'array_syntax' => array('syntax' => 'long'),
        'protected_to_private' => false,
        '@PSR1' => true,
        '@PSR2' => true,
        '@PHP71Migration' => true,
        'ordered_imports' => array('sortAlgorithm' => 'alpha'),
        'header_comment' => array('header' => $header),
        'heredoc_to_nowdoc' => true,
        'ordered_class_elements' => array('sortAlgorithm' => 'alpha'),
        'method_separation' => true,
        'no_extra_blank_lines' => array('tokens' => array('break', 'continue', 'extra', 'return', 'throw', 'use', 'parenthesis_brace_block', 'square_brace_block', 'curly_brace_block')),
        'blank_line_before_statement' => true,
    ))
    ->setRiskyAllowed(true)
    ->setFinder(
        PhpCsFixer\Finder::create()
            ->in(__DIR__.'/src')
            ->append(array(
                __FILE__,
                __DIR__.'/bin/compile',
                __DIR__.'/bin/dotfiles',
            ))
            ->exclude(array(
                // directories containing files with content that is autogenerated by `var_export`, which breaks CS in output code
                'Resources',
                'Spec',
                'fixtures',
            ))
            ->notName('Constant.php')
    )
;
